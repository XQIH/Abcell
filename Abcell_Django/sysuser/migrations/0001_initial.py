# Generated by Django 5.1.3 on 2025-04-11 06:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Box",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="盒子名称")),
                ("number", models.CharField(max_length=50, verbose_name="盒子编号")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "盒子",
                "verbose_name_plural": "盒子管理",
                "ordering": ["drawer", "number"],
            },
        ),
        migrations.CreateModel(
            name="CellType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="类型名称")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("primary", "原代细胞"),
                            ("human", "人"),
                            ("rat", "大鼠"),
                            ("mouse", "小鼠"),
                            ("adherent", "贴壁细胞"),
                            ("suspension", "悬浮细胞"),
                        ],
                        max_length=50,
                        verbose_name="细胞类别",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "细胞类型",
                "verbose_name_plural": "细胞类型管理",
            },
        ),
        migrations.CreateModel(
            name="Column",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="列名称")),
                ("number", models.CharField(max_length=50, verbose_name="列编号")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "列",
                "verbose_name_plural": "列管理",
                "ordering": ["level", "number"],
            },
        ),
        migrations.CreateModel(
            name="Freezer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="冰柜名称")),
                (
                    "number",
                    models.CharField(max_length=50, unique=True, verbose_name="冰柜编号"),
                ),
                (
                    "location",
                    models.CharField(blank=True, max_length=200, verbose_name="位置"),
                ),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "冰柜",
                "verbose_name_plural": "冰柜管理",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=20, null=True, unique=True, verbose_name="电话"
                    ),
                ),
                (
                    "gender",
                    models.CharField(max_length=20, null=True, verbose_name="性别"),
                ),
                (
                    "permission_level",
                    models.IntegerField(
                        choices=[(1, "1级权限"), (2, "2级权限"), (3, "3级权限")],
                        default=1,
                        verbose_name="权限级别",
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, unique=True, verbose_name="邮箱"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="sysuser_user_set",
                        related_query_name="sysuser_user",
                        to="auth.group",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        related_name="sysuser_user_set",
                        related_query_name="sysuser_user",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户管理",
                "db_table": "sysuser_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Cell",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="格子名称")),
                ("number", models.CharField(max_length=50, verbose_name="格子编号")),
                ("row_num", models.IntegerField(verbose_name="行号")),
                ("col_num", models.IntegerField(verbose_name="列号")),
                (
                    "is_occupied",
                    models.BooleanField(default=False, verbose_name="是否占用"),
                ),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "box",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cells",
                        to="sysuser.box",
                        verbose_name="所属盒子",
                    ),
                ),
            ],
            options={
                "verbose_name": "格子",
                "verbose_name_plural": "格子管理",
                "ordering": ["box", "row_num", "col_num"],
            },
        ),
        migrations.CreateModel(
            name="CellInventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cell_id",
                    models.CharField(max_length=100, unique=True, verbose_name="细胞ID"),
                ),
                (
                    "entry_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="录入时间"),
                ),
                (
                    "modify_time",
                    models.DateTimeField(auto_now=True, verbose_name="修改时间"),
                ),
                ("quantity", models.IntegerField(default=1, verbose_name="数量")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_stock", "在库"),
                            ("out_stock", "出库"),
                            ("destroyed", "已销毁"),
                        ],
                        default="in_stock",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="备注")),
                (
                    "entry_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cell_entries",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="录入人",
                    ),
                ),
                (
                    "storage_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sysuser.cell",
                        verbose_name="存放位置",
                    ),
                ),
                (
                    "cell_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sysuser.celltype",
                        verbose_name="细胞类型",
                    ),
                ),
            ],
            options={
                "verbose_name": "细胞库存",
                "verbose_name_plural": "细胞出入库管理",
                "ordering": ["-entry_time"],
            },
        ),
        migrations.CreateModel(
            name="CellOutRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "out_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="出库时间"),
                ),
                ("purpose", models.TextField(verbose_name="用途")),
                ("receiver", models.CharField(max_length=100, verbose_name="接收人")),
                ("notes", models.TextField(blank=True, verbose_name="备注")),
                (
                    "cell_inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sysuser.cellinventory",
                        verbose_name="细胞库存",
                    ),
                ),
                (
                    "out_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cell_outs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="出库人",
                    ),
                ),
            ],
            options={
                "verbose_name": "细胞出库记录",
                "verbose_name_plural": "细胞出库记录",
                "ordering": ["-out_time"],
            },
        ),
        migrations.CreateModel(
            name="Drawer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="抽屉名称")),
                ("number", models.CharField(max_length=50, verbose_name="抽屉编号")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "column",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drawers",
                        to="sysuser.column",
                        verbose_name="所属列",
                    ),
                ),
            ],
            options={
                "verbose_name": "抽屉",
                "verbose_name_plural": "抽屉管理",
                "ordering": ["column", "number"],
            },
        ),
        migrations.AddField(
            model_name="box",
            name="drawer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="boxes",
                to="sysuser.drawer",
                verbose_name="所属抽屉",
            ),
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="层级名称")),
                ("number", models.CharField(max_length=50, verbose_name="层级编号")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "freezer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="levels",
                        to="sysuser.freezer",
                        verbose_name="所属冰柜",
                    ),
                ),
            ],
            options={
                "verbose_name": "层级",
                "verbose_name_plural": "层级管理",
                "ordering": ["freezer", "number"],
            },
        ),
        migrations.AddField(
            model_name="column",
            name="level",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="columns",
                to="sysuser.level",
                verbose_name="所属层级",
            ),
        ),
    ]
